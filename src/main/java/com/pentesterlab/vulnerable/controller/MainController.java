package com.pentesterlab.vulnerable.controller;

import com.pentesterlab.vulnerable.entity.User;
import com.pentesterlab.vulnerable.service.UserService;
import jakarta.persistence.NoResultException;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import com.pentesterlab.vulnerable.service.SecurityService;
import org.springframework.web.bind.annotation.PostMapping;

@Controller
public class MainController {
    private SecurityService securityService;
    private UserService userService;
    public MainController(SecurityService securityService, UserService userService) {
        this.securityService = securityService;
        this.userService = userService;
    }

    @GetMapping("/")
    public String showHomePage(HttpServletRequest request, Model model) {
        String c = securityService.checkCookie(request);
        // check cookie
        if (c.isEmpty()) {
            return ("redirect:/login");
        }
        model.addAttribute("message", "You're now logged in");
        return "index";
    }

    @GetMapping("/login")
    public String showLoginPage() {
        return "login";
    }
    @PostMapping("/login")
    public String loginUser(HttpServletResponse response, User user, Model model) {
        User userdata = new User();
        try {
            userdata = userService.findUsernameAndPassword(user.getUsername(), user.getPassword());
        } catch (IllegalArgumentException ex) {
            model.addAttribute("error", ex);
            return "login";
        } catch (NoResultException ex) {
            model.addAttribute("error", "Invalid credentials");
            return "login";
        }
        // set cookie
        securityService.setCookie(response, user.getUsername());
        return "redirect:/";
    }


}
